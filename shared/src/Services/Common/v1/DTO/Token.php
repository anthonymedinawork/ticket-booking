<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: api/common/v1/message.proto

namespace Spiral\Shared\Services\Common\v1\DTO;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>api.common.v1.dto.Token</code>
 */
class Token extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string token = 1;</code>
     */
    protected $token = '';
    /**
     * Generated from protobuf field <code>.google.protobuf.Timestamp expires_at = 2;</code>
     */
    protected $expires_at = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $token
     *     @type \Google\Protobuf\Timestamp $expires_at
     * }
     */
    public function __construct($data = NULL) {
        \Spiral\Shared\Services\Common\v1\GPBMetadata\Message::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string token = 1;</code>
     * @return string
     */
    public function getToken()
    {
        return $this->token;
    }

    /**
     * Generated from protobuf field <code>string token = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setToken($var)
    {
        GPBUtil::checkString($var, True);
        $this->token = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.google.protobuf.Timestamp expires_at = 2;</code>
     * @return \Google\Protobuf\Timestamp
     */
    public function getExpiresAt()
    {
        return $this->expires_at;
    }

    /**
     * Generated from protobuf field <code>.google.protobuf.Timestamp expires_at = 2;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setExpiresAt($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->expires_at = $var;

        return $this;
    }

}

